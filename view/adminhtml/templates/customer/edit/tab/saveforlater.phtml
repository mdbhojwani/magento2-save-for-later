<?php
/**
 * @category Mdbhojwani
 * @package Mdbhojwani_SaveForLater
 * @author Manish Bhojwani <manishbhojwani3@gmail.com>
 * @github https://github.com/mdbhojwani
 * @license http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

/** @var \Magento\Framework\View\Element\Template $block */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
?>
<?php $scriptString = <<<script

    require([
            "Magento_Ui/js/modal/confirm",
            "prototype",
            "Magento_Catalog/catalog/product/composite/configure"
        ], function(confirm){

//<!--
            saveForLaterControl = {
                reload: function (urlParams) {
                    if (!urlParams) {
                        urlParams = '';
                    }
                    var url = {$block->escapeJs($block->getJsObjectName())}.url + '?ajax=true' + urlParams;
                    new Ajax.Updater(
                        {$block->escapeJs($block->getJsObjectName())}.containerId,
                        url,
                        {
                            parameters: {form_key: FORM_KEY},
                            onComplete: {$block->escapeJs($block->getJsObjectName())}.initGrid
                            .bind({$block->escapeJs($block->getJsObjectName())}),
                        evalScripts:true
                }
            );
        },

        configureItem: function (itemId) {
        productConfigure.setOnLoadIFrameCallback('saveforlater', this.cbOnLoadIframe.bind(this));
        productConfigure.showItemConfiguration('saveforlater', itemId);
        return false;
    },

    cbOnLoadIframe: function (response) {
        if (!response.ok) {
            return;
        }
        this.reload();
    },

    removeItem: function (itemId) {
        var self = this;

        confirm({
            content: '{$block->escapeJs(__('Are you sure you want to remove this item?'))}',
            actions: {
                confirm: function () {
                    self.reload('&delete=' + itemId);
                }
            }
        });
    }
    }

    productConfigure.addListType(
        'saveforlater',
        {
            urlFetch: '{$block->escapeJs($block->getUrl('customer/saveforlater_product_composite_saveforlater/configure'))}',
            urlConfirm: '{$block->escapeJs($block->getUrl('customer/saveforlater_product_composite_saveforlater/update'))}'
        }
    );
    //-->

    });

script;
?>
<?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false) ?>
